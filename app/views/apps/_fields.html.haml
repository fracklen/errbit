= errors_for app

%div.required.form-group
  = f.label :name
  = f.text_field :name, :class => "form-control"

- unless app.new_record?
  %div
    %label Api Key
    %span= app.api_key
    = link_to t('.regenerate_api_key'), regenerate_api_key_app_path(app), :class => 'button btn btn-sm', :method => 'post'

%div.form-group
  = f.label :repository_branch
  = f.text_field :repository_branch, :placeholder => "master", :class => "form-control"
%div.form-group
  = f.label :github_repo
  = f.text_field :github_repo, :placeholder => "errbit/errbit from https://github.com/errbit/errbit", :class => "form-control"
%div.form-group
  = f.label :bitbucket_repo
  = f.text_field :bitbucket_repo, :placeholder => "errbit/errbit from https://bitbucket.org/errbit/errbit", :class => "form-control"
%div.form-group
  = f.label :asset_host
  = f.text_field :asset_host, :placeholder => "e.g. https://assets.example.com", :class => "form-control"
  %em.help-block Used to generate links for JavaScript errors
%div.form-group
  = f.label :current_app_version, 'Latest App Version'
  = f.text_field :current_app_version, :placeholder => "e.g. 2.0.1 from the Bundle Identifier on an iOS app", :class => "form-control"
  %em.help-block Mobile apps can set this to ignore any error below this version. ie: 1.4.3
%fieldset
  %legend Notifications
  %div.checkbox
    %label
      = f.check_box :notify_on_errs, 'data-show-when-checked' => '.email_at_notices_nested'
      Notify on errors
  - if Errbit::Config.per_app_email_at_notices
    %div.email_at_notices_nested{:style => f.object.notify_on_errs ? '' : 'display: none;'}
      .field-helpertext Send a notification every
      = f.text_field :email_at_notices, :value => f.object.email_at_notices.join(", ")
      .field-helpertext times an error occurs (comma separated).
  %div.checkbox
    %label
      = f.check_box :notify_on_deploys
      Notify on deploys

%div.checkbox
  %label
    = f.check_box :notify_all_users
    Send notifications to all users


%fieldset.watchers.nested-wrapper{:style => f.object.notify_all_users ? 'display: none;' : ''}
  %legend Watchers
  = f.fields_for :watchers do |w|
    %div.watcher.nested
      %div.choose
        .radio
          = label_tag :watcher_type_user, :for => label_for_attr(w, 'watcher_type_user') do
            = w.radio_button :watcher_type, :user
            User
        .radio
          = label_tag :watcher_type_email, :for => label_for_attr(w, 'watcher_type_email') do
            = w.radio_button :watcher_type, :email
            Email Address

      %div.watcher_params.user{:class => w.object.email.blank? ? 'chosen' : nil}
        = w.select :user_id, users.map{|u| [u.name,u.id.to_s]}, { :include_blank => '-- Select a User --' }, :class => "form-control"
      %div.watcher_params.email{:class => w.object.email.present? ? 'chosen' : nil}
        = w.text_field :email, :class => "form-control"

%div.checkbox
  %label
    = f.check_box :resolve_errs_on_deploy
    Resolve errs on deploy

= render "issue_tracker_fields", :f => f
= render "service_notification_fields", :f => f
